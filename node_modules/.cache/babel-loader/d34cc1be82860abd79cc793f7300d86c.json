{"ast":null,"code":"var _jsxFileName = \"/home/yiho/airs-recom/src/App.js\";\nimport React, { Component } from 'react';\nimport PhoneForm from './component/PhoneForm';\nimport PhoneInfoList from './component/PhoneInfoList';\n\nclass App extends Component {\n  constructor(props) {\n    id = 2;\n    this.state = {\n      information: [{\n        id: 0,\n        name: '김민준',\n        phone: '010-0000-0000'\n      }, {\n        id: 1,\n        name: '홍길동',\n        phone: '010-0000-0001'\n      }],\n      keyword: ''\n    };\n  }\n\n  render() {\n    const {\n      information,\n      keyword\n    } = this.state;\n    const filteredList = information.filter(info => info.name.indexOf(keyword) !== -1);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(PhoneForm, {\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"\\uAC80\\uC0C9 \\uD560 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694..\",\n      onChange: this.handleChange,\n      value: keyword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(PhoneInfoList, {\n      data: filteredList,\n      onRemove: this.handleRemove,\n      onUpdate: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/yiho/airs-recom/src/App.js"],"names":["React","Component","PhoneForm","PhoneInfoList","App","constructor","props","id","state","information","name","phone","keyword","render","filteredList","filter","info","indexOf","handleCreate","handleChange","handleRemove","handleUpdate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAC1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjBC,IAAAA,EAAE,GAAG,CAAL;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,CACX;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEG,QAAAA,IAAI,EAAE,KAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OADW,EAMX;AACEJ,QAAAA,EAAE,EAAE,CADN;AAEEG,QAAAA,IAAI,EAAE,KAFR;AAGEC,QAAAA,KAAK,EAAE;AAHT,OANW,CADF;AAaXC,MAAAA,OAAO,EAAE;AAbE,KAAb;AAeD;;AA4BDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,WAAF;AAAeG,MAAAA;AAAf,QAA2B,KAAKJ,KAAtC;AACA,UAAMM,YAAY,GAAGL,WAAW,CAACM,MAAZ,CACnBC,IAAI,IAAIA,IAAI,CAACN,IAAL,CAAUO,OAAV,CAAkBL,OAAlB,MAA+B,CAAC,CADrB,CAArB;AAGA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,EAAE,KAAKM,YADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,WAAW,EAAC,yEADd;AAEE,MAAA,QAAQ,EAAE,KAAKC,YAFjB;AAGE,MAAA,KAAK,EAAEP,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEE,YADR;AAEE,MAAA,QAAQ,EAAE,KAAKM,YAFjB;AAGE,MAAA,QAAQ,EAAE,KAAKC,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAoBD;;AAvEyB;;AA0E5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport PhoneForm from './component/PhoneForm';\nimport PhoneInfoList from './component/PhoneInfoList';\n\nclass App extends Component {\n  constructor(props) {\n    id = 2\n    this.state = {\n      information: [\n        {\n          id: 0,\n          name: '김민준',\n          phone: '010-0000-0000'\n        },\n        {\n          id: 1,\n          name: '홍길동',\n          phone: '010-0000-0001'\n        }\n      ],\n      keyword: ''\n    }\n  }\n  handleChange = (e) => {\n    this.setState({\n      keyword: e.target.value,\n    });\n  }\n  handleCreate = (data) => {\n    const { information } = this.state;\n    this.setState({\n      information: information.concat({ id: this.id++, ...data })\n    })\n  }\n  handleRemove = (id) => {\n    const { information } = this.state;\n    this.setState({\n      information: information.filter(info => info.id !== id)\n    })\n  }\n  handleUpdate = (id, data) => {\n    const { information } = this.state;\n    this.setState({\n      information: information.map(\n        info => id === info.id\n          ? { ...info, ...data } // 새 객체를 만들어서 기존의 값과 전달받은 data 을 덮어씀\n          : info // 기존의 값을 그대로 렌더링\n      )\n    })\n  }\n  render() {\n    const { information, keyword } = this.state;\n    const filteredList = information.filter(\n      info => info.name.indexOf(keyword) !== -1\n    );\n    return (\n      <div>\n        <PhoneForm\n          onCreate={this.handleCreate}\n        />\n        <p>\n          <input\n            placeholder=\"검색 할 이름을 입력하세요..\"\n            onChange={this.handleChange}\n            value={keyword}\n          />\n        </p>\n        <hr />\n        <PhoneInfoList\n          data={filteredList}\n          onRemove={this.handleRemove}\n          onUpdate={this.handleUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}