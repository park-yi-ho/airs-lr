{"ast":null,"code":"var _jsxFileName = \"/home/yiho/airs-recom/src/App.js\";\nimport React, { Component } from 'react';\nimport PhoneForm from './component/PhoneForm';\nimport PhoneInfoList from './component/PhoneInfoList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    };\n\n    this.handleCreate = data => {\n      const {\n        information\n      } = this.state;\n      this.setState({\n        information: information.concat({\n          id: this.id++,\n          ...data\n        })\n      });\n    };\n\n    this.handleRemove = id => {\n      const {\n        information\n      } = this.state;\n      this.setState({\n        information: information.filter(info => info.id !== id)\n      });\n    };\n\n    this.handleUpdate = (id, data) => {\n      const {\n        information\n      } = this.state;\n      this.setState({\n        information: information.map(info => id === info.id ? { ...info,\n          ...data\n        } // 새 객체를 만들어서 기존의 값과 전달받은 data 을 덮어씀\n        : info // 기존의 값을 그대로 렌더링\n        )\n      });\n    };\n\n    this.id = 2;\n    this.state = {\n      information: [{\n        id: 0,\n        name: '김민준',\n        phone: '010-0000-0000'\n      }, {\n        id: 1,\n        name: '홍길동',\n        phone: '010-0000-0001'\n      }],\n      keyword: ''\n    };\n  }\n\n  render() {\n    const {\n      information,\n      keyword\n    } = this.state;\n    const filteredList = information.filter(info => info.name.indexOf(keyword) !== -1);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(PhoneForm, {\n      onCreate: this.handleCreate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"\\uAC80\\uC0C9 \\uD560 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694..\",\n      onChange: this.handleChange,\n      value: keyword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(PhoneInfoList, {\n      data: filteredList,\n      onRemove: this.handleRemove,\n      onUpdate: this.handleUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/yiho/airs-recom/src/App.js"],"names":["React","Component","PhoneForm","PhoneInfoList","App","constructor","props","handleChange","e","setState","keyword","target","value","handleCreate","data","information","state","concat","id","handleRemove","filter","info","handleUpdate","map","name","phone","render","filteredList","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PhoneForm from './component/PhoneForm';\nimport PhoneInfoList from './component/PhoneInfoList';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.id = 2\n    this.state = {\n      information: [\n        {\n          id: 0,\n          name: '김민준',\n          phone: '010-0000-0000'\n        },\n        {\n          id: 1,\n          name: '홍길동',\n          phone: '010-0000-0001'\n        }\n      ],\n      keyword: ''\n    }\n  }\n  handleChange = (e) => {\n    this.setState({\n      keyword: e.target.value,\n    });\n  }\n  handleCreate = (data) => {\n    const { information } = this.state;\n    this.setState({\n      information: information.concat({ id: this.id++, ...data })\n    })\n  }\n  handleRemove = (id) => {\n    const { information } = this.state;\n    this.setState({\n      information: information.filter(info => info.id !== id)\n    })\n  }\n  handleUpdate = (id, data) => {\n    const { information } = this.state;\n    this.setState({\n      information: information.map(\n        info => id === info.id\n          ? { ...info, ...data } // 새 객체를 만들어서 기존의 값과 전달받은 data 을 덮어씀\n          : info // 기존의 값을 그대로 렌더링\n      )\n    })\n  }\n  render() {\n    const { information, keyword } = this.state;\n    const filteredList = information.filter(\n      info => info.name.indexOf(keyword) !== -1\n    );\n    return (\n      <div>\n        <PhoneForm\n          onCreate={this.handleCreate}\n        />\n        <p>\n          <input\n            placeholder=\"검색 할 이름을 입력하세요..\"\n            onChange={this.handleChange}\n            value={keyword}\n          />\n        </p>\n        <hr />\n        <PhoneInfoList\n          data={filteredList}\n          onRemove={this.handleRemove}\n          onUpdate={this.handleUpdate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}